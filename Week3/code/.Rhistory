#A simple script to illustrate R input-output
#Run line byline and check inputs outputs to understand what is happening
MyData <- read.csv("../data/trees.csv", header = TRUE) #import with headers
write.csv(MyData, "../results/MyData.csv") #write it out as a new file
write.table(MyData[1,], file = "../results/MyData.csv", append=TRUE) #Append to it
write.csv(MyData, "../results/MyData.csv", row.names=TRUE) #write row names
write.table(MyData, "../results/MyData.csv", col.names=FALSE) #ignore column names
#A simple script to illustrate R input-output
#Run line byline and check inputs outputs to understand what is happening
MyData <- read.csv("../data/trees.csv", header = TRUE) #import with headers
write.csv(MyData, "../results/MyData.csv") #write it out as a new file
write.table(MyData[1,], file = "../results/MyData.csv", append=TRUE) #Append to it
write.csv(MyData, "../results/MyData.csv", row.names=TRUE) #write row names
write.table(MyData, "../results/MyData.csv", col.names=FALSE) #ignore column names
ok
1
2
3
1 3
1
3
6566
exit
quit
quit()
a <- TRUE
if (a == TRUE) {
print ("a is TRUE")
} else {
print ("a is FALSE")
}
z <- runif(1)
if (z <= 0.5) {print ("Less than half")}
for (i in 1:10) {
j <- i * i
print(paste(i, " squeared is ", j))
]
for (i in 1:10) {
j <- i * i
print(paste(i, "squared is", j))
}
for(species in c('Heliodoxa rubinoides', 'Boissonneaua jardini', 'Sula nebouxii')) {
print(paste('The species is', species))
}
v1 <- c("a", "bc", "def")
for(i in v1) {
print(i)
}
i <- 0
while (i < 10) {
i <- i+1
print(i^2)
}
Rscript control_flow.R
exit
Rscript control.flow R
Rscript control_flow.R
exit()
quit()
ls()
boilerplate.R
source("/home/nine187/Documents/CMEECourseWork/Week3/code/boilerplate.R", encoding = "UTF-8")
ls()
ls(pattern = "MyFun*")
class(MyFunction)
source("/home/nine187/Documents/CMEECourseWork/Week3/sandbox/random1.R", encoding = "UTF-8")
exit
quit()
MyData<- as.matrix(read.csv("../data/PoundHillData.csv",header = FALSE))
class(MyData)
MyMetaData <- read.csv("../data/PoundHillMetaData.csv", header = TRUE, sep=";")
class(MyMetaData)
head(MyData)
quit(0
quit()
MyMetaData
MyData <- t(MyData)
head(MyData)
colnames(MyData)
TempData <- as.data.frame(MyData[-1],stringsAsFactors = F)
head(TempData)
TempData <- as.data.frame(MyData[-1,],stringsAsFactors = F)
head(TempData)
colnames(TempData) <- rowname(TempData) <- NULL
rownames(TempData) <- NULL
head(TempData)
require(reshape2) # load the reshape2 package
MyWrangledData <- melt(TempData, id=c("Cultivation", "Block", "Plot", "Quadrat"),head(MyWrangledData); tail(MyWrangledData)
MyWrangledData <- melt(TempData, id=c("Cultivation", "Block", "Plot", "Quadrat"), variable.name = "Species", value.name = "Count")
head(MyWrangledData); tail(MyWrangledData)
MyWrangledData[, "Cultivation"] <- as.factor(MyWrangledData[, "Cultivation"])
MyWrangledData[, "Block"] <- as.factor(MyWrangledData[, "Block"])
MyWrangledData[, "Plot"] <- as.factor(MyWrangledData[, "Plot"])
MyWrangledData[, "Quadrat"] <- as.factor(MyWrangledData[, "Quadrat"])
MyWrangledData[, "Count"] <- as.integer(MyWrangledData[, "Count"])
str(MyWrangledData)
quit()
