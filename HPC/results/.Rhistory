load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/250
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
# Question 37
question_37 <- function(){
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
for (i in 750:1000){
load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/250
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
# Question 37
question_37 <- function(){
browser()
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
for (i in 750:1000){
load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/250
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
pop_stochastic_small
pop_stochastic_small
# Question 37
question_37 <- function(){
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
for (i in 750:1000){
load(files[i])
#compute the mean population size(population trend)
try(iter_1000 <- pop_size)
try(pop_stochastic_small <- pop_stochastic_small + iter_1000)
}
mean_pop_4 <- pop_stochastic_small/250
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
question_37()
# Question 37
question_37 <- function(){
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
for (i in 750:1000){
load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/250
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
# Question 37
question_37 <- function(){
browser()
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
for (i in 750:1000){
load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/250
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
question_37()
# Question 37
question_37 <- function(){
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
#there were issues with the file #99* something so i removed it
for (i in 750:998){
load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/248
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
# Question 37
question_37 <- function(){
#assign projection matrix and simulation length
projection_matrix <- matrix(c(0.1, 0.6, 0.0, 0.0,
0.0, 0.4, 0.4, 0.0,
0.0, 0.0, 0.7, 0.25,
2.6, 0.0, 0.0, 0.4),nrow=4,ncol=4)
simulation_length <- 120
cond_3 <- state_initialise_spread(4,100)
cond_4 <- state_initialise_spread(4,10)
#create a list of file output in section 2 cluster
files <- list.files(pattern = "section2_*.")
#preallocate dataframe
iter_750 <- c()
iter_1000 <- c()
pop_stochastic_large <- 0
pop_stochastic_small <- 0
########large############
#identify the appropriate population size result
for (i in 501:750){
load(files[i])
#compute the mean population size(population trend) at each step
iter_750 <- pop_size
pop_stochastic_large <- pop_stochastic_large + iter_750
}
mean_pop_3 <- pop_stochastic_large/250
#compute the population size time series using deterministic simulation
large_d <- deterministic_simulation(cond_3, projection_matrix, simulation_length)
#############small###########
#there were issues with the file #99* something so i removed it
for (i in 750:995){
load(files[i])
#compute the mean population size(population trend)
iter_1000 <- pop_size
pop_stochastic_small <- pop_stochastic_small + iter_1000
}
mean_pop_4 <- pop_stochastic_small/245
#compute the population size time series using deterministic simulation
small_d <- deterministic_simulation(cond_4, projection_matrix, simulation_length)
##############plotting##########
#large
png(filename="question_37_large.png", width = 600, height = 400)
plot(mean_pop_3,
type = "l",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(large_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
#small
png(filename="question_37_small.png", width = 600, height = 400)
plot(mean_pop_4,
type = "c",
col = "blue",
xlab = "Simulation length",
ylab = "Population")
lines(small_d,
type = "l",
col = "red")
Sys.sleep(0.1)
dev.off()
return("When is it appropriate or not appropriate to approximate the ‘average’
behaviour of this stochastic system with a deterministic model?")
}
question_37()
